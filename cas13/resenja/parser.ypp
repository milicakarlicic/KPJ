
// napomena: zadatak je moguce uraditi i sa kopiranjem izraza i naredbi (vjezba za domaci)

%{

#include <iostream>
#include <cstdlib>

#include "naredbe.hpp"

#define YYDEBUG 1

using namespace std;

void yyerror(const string& poruka) {
    cerr << poruka << endl;
    exit(EXIT_FAILURE);
}

extern int yylex();

%}

%union {
    int b;
    string *s;
    Izraz *i;
    Naredba *n;
    vector<Naredba*> *v;
}

%token pocetak kraj ispisi mod_token dodela ako_je onda inace unesi dok_je radi_sledece
%token <s> string_token id
%token <b> broj

%type <i> E
%type <n> NAREDBA BLOK
%type <v> NIZ_NAREDBI

%nonassoc ':'
%nonassoc inace
%left '<' '>'
%left '+'
%left '*' mod_token

%%

Program: BLOK '.' {
    $1->Izvrsi();
    delete $1;
}
;

BLOK: pocetak NIZ_NAREDBI kraj {
    $$ = new Blok(*$2);
    delete $2;
}
;

NIZ_NAREDBI: NIZ_NAREDBI ';' NAREDBA {
    $$ = $1;
    $$->push_back($3);
}
| NAREDBA {
    $$ = new vector<Naredba*>();
    $$->push_back($1);
}
;

NAREDBA: ispisi '(' string_token ')' {
    $$ = new IspisS(*$3);
    delete $3;
}
| ispisi '(' E ')' {
    $$ = new IspisE($3);
}
| id dodela E {
    $$ = new Dodjela(*$1, $3);
    delete $1;
}
| unesi '(' id ')' {
    $$ = new Unesi(*$3);
    delete $3;
}
| ako_je E onda ':' NAREDBA inace ':' NAREDBA {
    $$ = new UslovSaInace($2, $5, $8);

}
| ako_je E onda ':' NAREDBA {
    $$ = new UslovBezInace($2, $5);

}
| dok_je E radi_sledece ':' NAREDBA {
    $$ = new Petlja($2, $5);
}
| BLOK {
    $$ = $1;
}
;

E: E '+' E {
    $$ = new Zbir($1, $3);
}
| E '*' E {
    $$ = new Proizvod($1, $3);
}
| E mod_token E {
    $$ = new Mod($1, $3);
}
| '(' E ')' {
    $$ = $2;
}
| E '>' E {
    $$ = new Vece($1, $3);
}
| E '<' E {
    $$ = new Manje($1, $3);
}
| broj {
    $$ = new Konstanta($1);
}
| id {
    $$ = new Promenljiva(*$1);
    delete $1;
}
;

%%

// zbog naredbe "unesi" mijenjamo standardni ulaz (promenljiva iz lex.yy.c - pogledati u okviru kartice leksicka analiza 11. cas) i citamo iz datoteke koja se prosledjuje kao arg. komandne linije
extern FILE* yyin;

int main(int argc, char** argv) {
    // yydebug = 1;
    if(argc != 2)
    yyerror("Pogresan broj argumenata komandne linije");


    if((yyin = fopen(argv[1], "r")) == NULL)
        yyerror("Neuspjesno otvaranje datoteke");

    yyparse();

    fclose(yyin);

    return 0;
}
